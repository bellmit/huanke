<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huanke.iot.base.dao.project.JobMapper">

    <sql id="tableName">
        t_project_job_info
    </sql>
    <!-- 插入一条记录 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.huanke.iot.base.po.project.ProjectJobInfo">
        INSERT INTO
        <include refid="tableName"/>
        (
        customerId,
        reportCustUserId,
        type,
        linkDeviceId,
        linkProjectId,
        name,
        description,
        isRule,
        ruleId,
        warnLevel,
        sourceType,
        planId,
        finalTime,
        imgList,
        enableUsers,
        warnStatus,
        flowStatus,
        status,
        createTime,
        createUser
        )
        VALUES
        (
        #{customerId},
        #{reportCustUserId},
        #{type},
        #{linkDeviceId},
        #{linkProjectId},
        #{name},
        #{description},
        #{isRule},
        #{ruleId},
        #{warnLevel},
        #{sourceType},
        #{planId},
        #{finalTime},
        #{imgList},
        #{enableUsers},
        #{warnStatus},
        #{flowStatus},
        #{status},
        #{createTime},
        #{createUser}
        )
    </insert>

    <select id="selectById" parameterType="java.lang.Integer" resultType="com.huanke.iot.base.po.project.ProjectJobInfo">
        select
        *
        FROM
        <include refid="tableName"/>
        WHERE id = #{id} limit 1
    </select>

    <select id="selectListJob" resultType="com.huanke.iot.base.po.project.ProjectJobInfo">
        select
        *
        FROM
        <include refid="tableName"/>
        WHERE 1=1
        <if test="projectJobInfo.customerId != null and projectJobInfo.customerId!='' ">
            AND customerId = #{projectJobInfo.customerId}
        </if>
        <if test="projectJobInfo.reportCustUserId != null and projectJobInfo.reportCustUserId!='' ">
            AND reportCustUserId = #{projectJobInfo.reportCustUserId}
        </if>
        <if test="projectJobInfo.type != null and projectJobInfo.type!='' ">
            AND type = #{projectJobInfo.type}
        </if>
        <if test="projectJobInfo.linkDeviceId != null and projectJobInfo.linkDeviceId!='' ">
            AND linkDeviceId = #{projectJobInfo.linkDeviceId}
        </if>
        <if test="projectJobInfo.linkProjectId != null and projectJobInfo.linkProjectId!='' ">
            AND linkProjectId = #{projectJobInfo.linkProjectId}
        </if>
        <if test="projectJobInfo.isRule != null and projectJobInfo.isRule!='' ">
            AND isRule = #{projectJobInfo.isRule}
        </if>
        <if test="projectJobInfo.ruleId != null and projectJobInfo.ruleId!='' ">
            AND ruleId = #{projectJobInfo.ruleId}
        </if>
        <if test="projectJobInfo.warnLevel != null and projectJobInfo.warnLevel!='' ">
            AND warnLevel = #{projectJobInfo.warnLevel}
        </if>
        <if test="projectJobInfo.sourceType != null and projectJobInfo.sourceType!='' ">
            AND sourceType = #{projectJobInfo.sourceType}
        </if>
        <if test="projectJobInfo.planId != null and projectJobInfo.planId!='' ">
            AND planId = #{projectJobInfo.planId}
        </if>
        <if test="projectJobInfo.warnStatus != null and projectJobInfo.warnStatus!='' ">
            AND warnStatus = #{projectJobInfo.warnStatus}
        </if>
        <if test="projectJobInfo.flowStatus != null and projectJobInfo.flowStatus!='' ">
            AND flowStatus = #{projectJobInfo.flowStatus}
        </if>
        <if test="projectJobInfo.status != null and projectJobInfo.status!='' ">
            AND status = #{projectJobInfo.status}
        </if>
        <if test="projectJobInfo.enableUsers != null and projectJobInfo.enableUsers!='' ">
            AND (find_in_set(#{projectJobInfo.enableUsers}, enableUsers)
            OR enableUsers is null)
        </if>
    </select>

    <select id="selectList" resultType="com.huanke.iot.base.po.project.ProjectJobInfo">
        select * from
        <include refid="tableName"/>
        <where>
            1=1
        </where>
        limit #{offset},#{limit}
    </select>


    <!--暂时未使用-->
    <update id="updateById" parameterType="com.huanke.iot.base.po.project.ProjectJobInfo">
        update
        <include refid="tableName"/>
        <set>
            <if test="name != null and name!='' ">
                name = #{name},
            </if>
            <if test="description != null and description!='' ">
                description = #{description},
            </if>
            <if test="isRule != null">
                isRule = #{isRule},
            </if>
            <if test="ruleId != null">
                ruleId = #{ruleId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="linkDeviceId != null">
                linkDeviceId = #{linkDeviceId},
            </if>
            <if test="linkProjectId != null">
                linkProjectId = #{linkProjectId},
            </if>
            <if test="finalTime != null">
                finalTime = #{finalTime},
            </if>
            <if test="enableUsers != null and enableUsers!='' ">
                enableUsers = #{enableUsers},
            </if>
            <if test="warnStatus != null">
                warnStatus = #{warnStatus},
            </if>
            <if test="flowStatus != null">
                flowStatus = #{flowStatus},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
            <if test="updateUser != null">
                updateUser = #{updateUser},
            </if>
        </set>
        where
        1= 1
        and id = #{id}
    </update>


    <update id="deleteById" parameterType="java.lang.Integer">
        update
        <include refid="tableName"/>
        <set>
            isDelete = 1
        </set>
        WHERE id  = #{id}
    </update>

    <update id="batchDelete">
        UPDATE <include refid="tableName"/>
        SET status = 2
        ,updateUser = #{userId}
        WHERE id IN
        <foreach item="ids" collection="valueList" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </update>

    <update id="batchForbidden">
        UPDATE <include refid="tableName"/>
        SET status = 3
        ,updateUser = #{userId}
        WHERE id IN
        <foreach item="ids" collection="valueList" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </update>

    <!--列表总条数-->
    <select id="selectCount"  resultType="java.lang.Integer">
        select count(1) from
        <include refid="tableName"/>
        where 1=1
        <!--<if test="param.type != null and param.type!='' ">
            AND type = #{param.type}
        </if>-->
        <if test = "projectJobInfo.name != null and projectJobInfo.name != ''">
            AND name LIKE CONCAT('%',#{projectJobInfo.name},'%')
        </if>
        <if test = "projectJobInfo.isRule != null and projectJobInfo.isRule != ''">
            AND isRule = #{projectJobInfo.isRule}
        </if>
        <if test = "projectJobInfo.warnLevel != null and projectJobInfo.warnLevel != ''">
            AND warnLevel = #{projectJobInfo.warnLevel}
        </if>
        <if test = "projectJobInfo.flowStatus != null and projectJobInfo.flowStatus != ''">
            AND flowStatus = #{projectJobInfo.flowStatus}
        </if>
        <if test = "projectJobInfo.createTime != null">
            AND  createTime >= #{projectJobInfo.createTime}
        </if>
        <if test = "projectJobInfo.customerId != null">
            AND  customerId = #{projectJobInfo.customerId}
        </if>
        <if test = "projectJobInfo.warnStatus != null">
            AND  warnStatus = #{projectJobInfo.warnStatus}
        </if>
        AND status != 2
        AND (find_in_set(#{userId}, enableUsers)
        OR enableUsers is null)
    </select>

    <!--返回当前列表集合-->
    <select id="selectPageList" resultType="com.huanke.iot.base.resp.project.JobRspPo">
      SELECT pji.id, pji.name, pji.description, pji.isRule, pji.ruleId, pji.sourceType,pji.finalTime,pji.warnLevel, pji.flowStatus, pji.createTime, pji.updateTime, u.nickName createName,u1.nickName updateName
      FROM t_project_job_info pji
      left join t_user u on pji.createUser = u.id
      left join t_user u1 on  pji.updateUser = u1.id
      WHERE 1=1
        <!--<if test = "dictPo.type != null and dictPo.type != ''">
            AND d.type = #{dictPo.type}
        </if>-->
        <if test = "projectJobInfo.name != null and projectJobInfo.name != ''">
            AND pji.name LIKE CONCAT('%',#{projectJobInfo.name},'%')
        </if>
        <if test = "projectJobInfo.isRule != null and projectJobInfo.isRule != ''">
            AND pji.isRule = #{projectJobInfo.isRule}
        </if>
        <if test = "projectJobInfo.warnLevel != null and projectJobInfo.warnLevel != ''">
            AND pji.warnLevel = #{projectJobInfo.warnLevel}
        </if>
        <if test = "projectJobInfo.flowStatus != null and projectJobInfo.flowStatus != ''">
            AND pji.flowStatus = #{projectJobInfo.flowStatus}
        </if>
        <if test = "projectJobInfo.createTime != null">
            AND pji.createTime >= #{projectJobInfo.createTime}
        </if>
        <if test = "projectJobInfo.customerId != null">
            AND pji.customerId = #{projectJobInfo.customerId}
        </if>
      AND pji.status != 2
      AND (find_in_set(#{userId}, pji.enableUsers)
        OR pji.enableUsers is null)
      LIMIT #{start},#{limit}
    </select>

    <update id="batchFlow">
        UPDATE <include refid="tableName"/>
        SET flowStatus = #{flowStatus}
        ,updateUser = #{userId}
        WHERE id IN
        <foreach item="ids" collection="valueList" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </update>

    <select id="selectMaintenanceCountByProjectId" resultType="java.lang.Integer">
        SELECT count(1) FROM t_project_job_info tpji
        LEFT JOIN t_project_plan_info tppi ON tpji.planId = tppi.id
        WHERE tppi.linkProjectId = #{projectId}
    </select>

    <select id="ifExistMateria" resultType="java.util.Map">
        SELECT tpbi.id projectId FROM t_project_job_info tpji
          LEFT JOIN t_project_plan_info tppi ON tpji.planId = tppi.id
          LEFT JOIN t_project_base_info tpbi ON tppi.linkProjectId = tpbi.id
          WHERE tpji.id = #{jobId} and tpbi.id is not null
    </select>

    <select id="selectAllToWarn" resultType="com.huanke.iot.base.po.project.ProjectJobInfo">
        SELECT * from
        <include refid="tableName"/>
        where to_days(finalTime) &lt; to_days(now())
        AND sourceType = 1
        AND warnStatus = 1
        AND status = 1
    </select>

    <select id="selectWarnPageList" resultType="com.huanke.iot.base.po.project.ProjectJobInfo">
        SELECT *
        FROM t_project_job_info pji
        WHERE 1=1
        <if test = "projectJobInfo.name != null and projectJobInfo.name != ''">
            AND name LIKE CONCAT('%',#{projectJobInfo.name},'%')
        </if>
        <if test = "projectJobInfo.isRule != null and projectJobInfo.isRule != ''">
            AND isRule = #{projectJobInfo.isRule}
        </if>
        <if test = "projectJobInfo.warnLevel != null and projectJobInfo.warnLevel != ''">
            AND warnLevel = #{projectJobInfo.warnLevel}
        </if>
        <if test = "projectJobInfo.flowStatus != null and projectJobInfo.flowStatus != ''">
            AND flowStatus = #{projectJobInfo.flowStatus}
        </if>
        <if test = "projectJobInfo.createTime != null">
            AND createTime >= #{projectJobInfo.createTime}
        </if>
        <if test = "projectJobInfo.customerId != null">
            AND customerId = #{projectJobInfo.customerId}
        </if>
      
        AND warnStatus = 2
        AND status != 2
        AND (find_in_set(#{userId}, enableUsers)
        OR enableUsers is null)
        AND flowStatus NOT IN (4,5)
        LIMIT #{start},#{limit}
    </select>
</mapper>